{"version":3,"sources":["components/MeetingFooter/MeetingFooter.component.js","components/Shared/Card/Card.component.js","components/Participants/Participant/Participant.component.js","components/Participants/Participants.component.js","store/actiontypes.js","store/actioncreator.js","components/MainScreen/MainScreen.component.js","server/firebase.js","App.js","reportWebVitals.js","server/peerConnection.js","store/reducer.js","index.js"],"names":["MeetingFooter","props","useState","mic","video","screen","chat","streamState","setStreamState","useEffect","onChat","setScreenState","isEnabled","currentState","onMicClick","onVideoClick","className","data-tip","onClick","icon","faMicrophone","faMicrophoneSlash","title","faVideo","faVideoSlash","onScreenClick","disabled","faDesktop","faComment","Card","children","Participant","curentIndex","currentParticipant","hideVideo","videoRef","showAvatar","currentUser","ref","id","autoPlay","playsInline","audio","style","background","avatarColor","name","connect","state","participants","stream","mainStream","useRef","participantKey","Object","keys","current","srcObject","muted","values","gridCol","length","gridColSize","gridRowSize","Math","ceil","screenPresenter","find","element","map","index","pc","peerConnection","remoteStream","MediaStream","ontrack","event","streams","getTracks","forEach","track","addTrack","videElement","document","getElementById","SET_MAIN_STREAM","ADD_PARTICIPANT","REMOVE_PARTICIPANT","SET_USER","UPDATE_USER","UPDATE_PARTICIPANT","setMainStream","type","payload","dispatch","updateUser","user","participantRef","updateStream","key","sender","getSenders","s","kind","replaceTrack","getVideoTracks","onScreenShareEnd","a","navigator","mediaDevices","getUserMedia","localStream","enabled","getDisplayMedia","mediaStream","mediaSource","onended","micEnabled","getAudioTracks","videoEnabled","console","log","firebase","initializeApp","apiKey","databaseURL","db","firepadRef","database","JSON","parse","localStorage","getItem","window","location","href","userName","fullName","roomId","URLSearchParams","search","get","child","push","history","replaceState","addParticipant","newUser","setUser","removeParticipant","userId","updateParticipant","getUserStream","connectedRef","on","snap","val","defaultPreference","userStatusRef","preferences","onDisconnect","remove","isUserSet","isStreamSet","preferenceSnap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updatePreference","preference","currentParticipantRef","setTimeout","update","createOffer","receiverId","createdID","onicecandidate","candidate","toJSON","offerDescription","setLocalDescription","offer","sdp","set","initializeListensers","currentUserRef","snapshot","data","store","getState","setRemoteDescription","RTCSessionDescription","createAnswer","addIceCandidate","RTCIceCandidate","answer","answerDescription","otherUserId","participantRef1","defaultUserState","servers","iceServers","urls","iceCandidatePoolSize","generateColor","floor","random","toString","addConnection","RTCPeerConnection","newUserId","currentUserId","offerIds","sort","b","localeCompare","createStore","action","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f01a1625.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faMicrophone,\r\n  faVideo,\r\n  faDesktop,\r\n  faVideoSlash,\r\n  faMicrophoneSlash,\r\n  faComment,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport \"./MeetingFooter.css\";\r\nconst MeetingFooter = (props) => {\r\n  const [streamState, setStreamState] = useState({\r\n    mic: true,\r\n    video: false,\r\n    screen: false,\r\n    chat: false\r\n  });\r\n  const micClick = () => {\r\n    setStreamState((currentState) => {\r\n      return {\r\n        ...currentState,\r\n        mic: !currentState.mic,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onVideoClick = () => {\r\n    setStreamState((currentState) => {\r\n      return {\r\n        ...currentState,\r\n        video: !currentState.video,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onScreenClick = () => {\r\n    props.onScreenClick(setScreenState);\r\n  };\r\n  const onChat = () => {\r\n    // props.onChat(streamState.chat);\r\n    setStreamState((currentState) => {\r\n      return {\r\n        ...currentState,\r\n        chat: !currentState.chat,\r\n      };\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    props.onChat(streamState.chat)\r\n  }, [streamState.chat, props])\r\n\r\n  const setScreenState = (isEnabled) => {\r\n    setStreamState((currentState) => {\r\n      return {\r\n        ...currentState,\r\n        screen: isEnabled,\r\n      };\r\n    });\r\n  };\r\n  const setChatState = (isEnabled) => {\r\n    setStreamState((currentState) => {\r\n      return {\r\n        ...currentState,\r\n        chat: isEnabled,\r\n      };\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    props.onMicClick(streamState.mic);\r\n  }, [streamState.mic]);\r\n  useEffect(() => {\r\n    props.onVideoClick(streamState.video);\r\n  }, [streamState.video]);\r\n  return (\r\n    <div className=\"meeting-footer\">\r\n      <div\r\n        className={\"meeting-icons \" + (!streamState.mic ? \"active\" : \"\")}\r\n        data-tip={streamState.mic ? \"Mute Audio\" : \"Unmute Audio\"}\r\n        onClick={micClick}\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={!streamState.mic ? faMicrophoneSlash : faMicrophone}\r\n          title=\"Mute\"\r\n        />\r\n      </div>\r\n      <div\r\n        className={\"meeting-icons \" + (!streamState.video ? \"active\" : \"\")}\r\n        data-tip={streamState.video ? \"Hide Video\" : \"Show Video\"}\r\n        onClick={onVideoClick}\r\n      >\r\n        <FontAwesomeIcon icon={!streamState.video ? faVideoSlash : faVideo} />\r\n      </div>\r\n      <div\r\n        className=\"meeting-icons\"\r\n        data-tip=\"Share Screen\"\r\n        onClick={onScreenClick}\r\n        disabled={streamState.screen}\r\n      >\r\n        <FontAwesomeIcon icon={faDesktop} />\r\n      </div>\r\n\r\n      <div\r\n        className=\"meeting-icons\"\r\n        data-tip=\"Chat\"\r\n        onClick={onChat}\r\n      // disabled={streamState.chat}\r\n      >\r\n        <FontAwesomeIcon icon={faComment} />\r\n      </div>\r\n      <ReactTooltip />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MeetingFooter;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className=\"card\">{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../../Shared/Card/Card.component\";\r\nimport { faMicrophoneSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Participant.css\";\r\n\r\nexport const Participant = (props) => {\r\n  const {\r\n    curentIndex,\r\n    currentParticipant,\r\n    hideVideo,\r\n    videoRef,\r\n    showAvatar,\r\n    currentUser,\r\n  } = props;\r\n  if (!currentParticipant) return <></>;\r\n  return (\r\n    <div className={`participant ${hideVideo ? \"hide\" : \"\"}`}>\r\n      <Card>\r\n        <video\r\n          ref={videoRef}\r\n          className=\"video\"\r\n          id={`participantVideo${curentIndex}`}\r\n          autoPlay\r\n          playsInline\r\n        ></video>\r\n        {!currentParticipant.audio && (\r\n          <FontAwesomeIcon\r\n            className=\"muted\"\r\n            icon={faMicrophoneSlash}\r\n            title=\"Muted\"\r\n          />\r\n        )}\r\n        {showAvatar && (\r\n          <div\r\n            style={{ background: currentParticipant.avatarColor }}\r\n            className=\"avatar\"\r\n          >\r\n            {currentParticipant.name[0]}\r\n          </div>\r\n        )}\r\n        <div className=\"name\">\r\n          {currentParticipant.name}\r\n          {currentUser ? \"(You)\" : \"\"}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./Participants.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Participant } from \"./Participant/Participant.component\";\r\n\r\nconst Participants = (props) => {\r\n  const videoRef = useRef(null);\r\n  let participantKey = Object.keys(props.participants);\r\n  useEffect(() => {\r\n    if (videoRef.current) {\r\n      videoRef.current.srcObject = props.stream;\r\n      videoRef.current.muted = true;\r\n    }\r\n  }, [props.currentUser, props.stream]);\r\n\r\n  const currentUser = props.currentUser\r\n    ? Object.values(props.currentUser)[0]\r\n    : null;\r\n\r\n  let gridCol =\r\n    participantKey.length === 1 ? 1 : participantKey.length <= 4 ? 2 : 4;\r\n  const gridColSize = participantKey.length <= 4 ? 1 : 2;\r\n  let gridRowSize =\r\n    participantKey.length <= 4\r\n      ? participantKey.length\r\n      : Math.ceil(participantKey.length / 2);\r\n\r\n  const screenPresenter = participantKey.find((element) => {\r\n    const currentParticipant = props.participants[element];\r\n    return currentParticipant.screen;\r\n  });\r\n\r\n  if (screenPresenter) {\r\n    gridCol = 1;\r\n    gridRowSize = 2;\r\n  }\r\n  const participants = participantKey.map((element, index) => {\r\n    const currentParticipant = props.participants[element];\r\n    const isCurrentUser = currentParticipant.currentUser;\r\n    if (isCurrentUser) {\r\n      return null;\r\n    }\r\n    const pc = currentParticipant.peerConnection;\r\n    const remoteStream = new MediaStream();\r\n    let curentIndex = index;\r\n    if (pc) {\r\n      pc.ontrack = (event) => {\r\n        event.streams[0].getTracks().forEach((track) => {\r\n          remoteStream.addTrack(track);\r\n        });\r\n        const videElement = document.getElementById(\r\n          `participantVideo${curentIndex}`\r\n        );\r\n        if (videElement) videElement.srcObject = remoteStream;\r\n      };\r\n    }\r\n\r\n    return (\r\n      <Participant\r\n        key={curentIndex}\r\n        currentParticipant={currentParticipant}\r\n        curentIndex={curentIndex}\r\n        hideVideo={screenPresenter && screenPresenter !== element}\r\n        showAvatar={\r\n          !currentParticipant.video &&\r\n          !currentParticipant.screen &&\r\n          currentParticipant.name\r\n        }\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <div\r\n      style={{\r\n        \"--grid-size\": gridCol,\r\n        \"--grid-col-size\": gridColSize,\r\n        \"--grid-row-size\": gridRowSize,\r\n      }}\r\n      className={`participants`}\r\n    >\r\n      {participants}\r\n      <Participant\r\n        currentParticipant={currentUser}\r\n        curentIndex={participantKey.length}\r\n        hideVideo={screenPresenter && !currentUser.screen}\r\n        videoRef={videoRef}\r\n        showAvatar={currentUser && !currentUser.video && !currentUser.screen}\r\n        currentUser={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    participants: state.participants,\r\n    currentUser: state.currentUser,\r\n    stream: state.mainStream,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Participants);\r\n","export const SET_MAIN_STREAM = \"SET_MAIN_STREAM\";\r\nexport const ADD_PARTICIPANT = \"ADD_PARTICIPANT\";\r\nexport const REMOVE_PARTICIPANT = \"REMOVE_PARTICIPANT\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const UPDATE_PARTICIPANT = \"UPDATE_PARTICIPANT\";\r\n","import {\r\n  SET_MAIN_STREAM,\r\n  ADD_PARTICIPANT,\r\n  SET_USER,\r\n  REMOVE_PARTICIPANT,\r\n  UPDATE_USER,\r\n  UPDATE_PARTICIPANT,\r\n} from \"./actiontypes\";\r\n\r\nexport const setMainStream = (stream) => {\r\n  return {\r\n    type: SET_MAIN_STREAM,\r\n    payload: {\r\n      mainStream: stream,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: SET_USER,\r\n    payload: {\r\n      currentUser: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addParticipant = (user) => {\r\n  return {\r\n    type: ADD_PARTICIPANT,\r\n    payload: {\r\n      newUser: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const updateUser = (user) => {\r\n  return {\r\n    type: UPDATE_USER,\r\n    payload: {\r\n      currentUser: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const updateParticipant = (user) => {\r\n  return {\r\n    type: UPDATE_PARTICIPANT,\r\n    payload: {\r\n      newUser: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const removeParticipant = (userId) => {\r\n  return {\r\n    type: REMOVE_PARTICIPANT,\r\n    payload: {\r\n      id: userId,\r\n    },\r\n  };\r\n};\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport MeetingFooter from \"../MeetingFooter/MeetingFooter.component\";\r\nimport Participants from \"../Participants/Participants.component\";\r\nimport \"./MainScreen.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { setMainStream, updateUser } from \"../../store/actioncreator\";\r\n\r\nconst MainScreen = (props) => {\r\n  const participantRef = useRef(props.participants);\r\n\r\n  const onMicClick = (micEnabled) => {\r\n    if (props.stream) {\r\n      props.stream.getAudioTracks()[0].enabled = micEnabled;\r\n      props.updateUser({ audio: micEnabled });\r\n    }\r\n  };\r\n  const onVideoClick = (videoEnabled) => {\r\n    if (props.stream) {\r\n      props.stream.getVideoTracks()[0].enabled = videoEnabled;\r\n      props.updateUser({ video: videoEnabled });\r\n    }\r\n  };\r\n  const onChatClick = (isEnabled) => {\r\n    console.log('chat', isEnabled);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    participantRef.current = props.participants;\r\n  }, [props.participants]);\r\n\r\n  const updateStream = (stream) => {\r\n    for (let key in participantRef.current) {\r\n      const sender = participantRef.current[key];\r\n      if (sender.currentUser) continue;\r\n      const peerConnection = sender.peerConnection\r\n        .getSenders()\r\n        .find((s) => (s.track ? s.track.kind === \"video\" : false));\r\n      peerConnection.replaceTrack(stream.getVideoTracks()[0]);\r\n    }\r\n    props.setMainStream(stream);\r\n  };\r\n\r\n  const onScreenShareEnd = async () => {\r\n    const localStream = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n      video: true,\r\n    });\r\n\r\n    localStream.getVideoTracks()[0].enabled = Object.values(\r\n      props.currentUser\r\n    )[0].video;\r\n\r\n    updateStream(localStream);\r\n\r\n    props.updateUser({ screen: false });\r\n  };\r\n\r\n  const onScreenClick = async () => {\r\n    let mediaStream;\r\n    if (navigator.getDisplayMedia) {\r\n      mediaStream = await navigator.getDisplayMedia({ video: true });\r\n    } else if (navigator.mediaDevices.getDisplayMedia) {\r\n      mediaStream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n      });\r\n    } else {\r\n      mediaStream = await navigator.mediaDevices.getUserMedia({\r\n        video: { mediaSource: \"screen\" },\r\n      });\r\n    }\r\n\r\n    mediaStream.getVideoTracks()[0].onended = onScreenShareEnd;\r\n\r\n    updateStream(mediaStream);\r\n\r\n    props.updateUser({ screen: true });\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"main-screen\">\r\n        <Participants />\r\n      </div>\r\n\r\n      <div className=\"footer\">\r\n        <MeetingFooter\r\n          onScreenClick={onScreenClick}\r\n          onMicClick={onMicClick}\r\n          onVideoClick={onVideoClick}\r\n          onChat={onChatClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stream: state.mainStream,\r\n    participants: state.participants,\r\n    currentUser: state.currentUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setMainStream: (stream) => dispatch(setMainStream(stream)),\r\n    updateUser: (user) => dispatch(updateUser(user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen);\r\n","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyA4WtHD1-5eOCeDJIS94nUrdfkC_ZgCr4I\", // Add API Key\r\n  databaseURL: \"https://ucam-7d058-default-rtdb.asia-southeast1.firebasedatabase.app\" // Add databaseURL\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase;\r\n\r\nvar firepadRef = firebase.database().ref();\r\n\r\nconst user = JSON.parse(localStorage.getItem('profile'))\r\nif (!user) {\r\n  window.location.href = '/login'\r\n}\r\nexport const userName = user.fullName\r\n// export const userName = prompt(\"What's your name?\");\r\nconst urlparams = new URLSearchParams(window.location.search);\r\nconst roomId = urlparams.get(\"id\");\r\n\r\nif (roomId) {\r\n  firepadRef = firepadRef.child(roomId);\r\n} else {\r\n  firepadRef = firepadRef.push();\r\n  window.history.replaceState(null, \"Meet\", \"?id=\" + firepadRef.key);\r\n}\r\n\r\nexport default firepadRef;\r\n","import MainScreen from \"./components/MainScreen/MainScreen.component\";\r\nimport firepadRef, { db, userName } from \"./server/firebase\";\r\nimport \"./App.css\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  setMainStream,\r\n  addParticipant,\r\n  setUser,\r\n  removeParticipant,\r\n  updateParticipant,\r\n} from \"./store/actioncreator\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App(props) {\r\n  const getUserStream = async () => {\r\n    const localStream = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n      video: true,\r\n    });\r\n\r\n    return localStream;\r\n  };\r\n  const user = JSON.parse(localStorage.getItem('profile'))\r\n  console.log(user);\r\n  useEffect(async () => {\r\n    const stream = await getUserStream();\r\n    stream.getVideoTracks()[0].enabled = false;\r\n    props.setMainStream(stream);\r\n\r\n    connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val()) {\r\n        const defaultPreference = {\r\n          audio: true,\r\n          video: false,\r\n          screen: false,\r\n        };\r\n        const userStatusRef = participantRef.push({\r\n          userName,\r\n          preferences: defaultPreference,\r\n        });\r\n        props.setUser({\r\n          [userStatusRef.key]: { name: userName, ...defaultPreference },\r\n        });\r\n        userStatusRef.onDisconnect().remove();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const connectedRef = db.database().ref(\".info/connected\");\r\n  const participantRef = firepadRef.child(\"participants\");\r\n\r\n  const isUserSet = !!props.user;\r\n  const isStreamSet = !!props.stream;\r\n\r\n  useEffect(() => {\r\n    if (isStreamSet && isUserSet) {\r\n      participantRef.on(\"child_added\", (snap) => {\r\n        const preferenceUpdateEvent = participantRef\r\n          .child(snap.key)\r\n          .child(\"preferences\");\r\n        preferenceUpdateEvent.on(\"child_changed\", (preferenceSnap) => {\r\n          props.updateParticipant({\r\n            [snap.key]: {\r\n              [preferenceSnap.key]: preferenceSnap.val(),\r\n            },\r\n          });\r\n        });\r\n        const { userName: name, preferences = {} } = snap.val();\r\n        props.addParticipant({\r\n          [snap.key]: {\r\n            name,\r\n            ...preferences,\r\n          },\r\n        });\r\n      });\r\n      participantRef.on(\"child_removed\", (snap) => {\r\n        props.removeParticipant(snap.key);\r\n      });\r\n    }\r\n  }, [isStreamSet, isUserSet]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MainScreen />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stream: state.mainStream,\r\n    user: state.currentUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setMainStream: (stream) => dispatch(setMainStream(stream)),\r\n    addParticipant: (user) => dispatch(addParticipant(user)),\r\n    setUser: (user) => dispatch(setUser(user)),\r\n    removeParticipant: (userId) => dispatch(removeParticipant(userId)),\r\n    updateParticipant: (user) => dispatch(updateParticipant(user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import firepadRef from \"./firebase\";\r\nimport { store } from \"../index\";\r\n\r\nconst participantRef = firepadRef.child(\"participants\");\r\n\r\nexport const updatePreference = (userId, preference) => {\r\n  const currentParticipantRef = participantRef\r\n    .child(userId)\r\n    .child(\"preferences\");\r\n  setTimeout(() => {\r\n    currentParticipantRef.update(preference);\r\n  });\r\n};\r\n\r\nexport const createOffer = async (peerConnection, receiverId, createdID) => {\r\n  const currentParticipantRef = participantRef.child(receiverId);\r\n  peerConnection.onicecandidate = (event) => {\r\n    event.candidate &&\r\n      currentParticipantRef\r\n        .child(\"offerCandidates\")\r\n        .push({ ...event.candidate.toJSON(), userId: createdID });\r\n  };\r\n\r\n  const offerDescription = await peerConnection.createOffer();\r\n  await peerConnection.setLocalDescription(offerDescription);\r\n\r\n  const offer = {\r\n    sdp: offerDescription.sdp,\r\n    type: offerDescription.type,\r\n    userId: createdID,\r\n  };\r\n\r\n  await currentParticipantRef.child(\"offers\").push().set({ offer });\r\n};\r\n\r\nexport const initializeListensers = async (userId) => {\r\n  const currentUserRef = participantRef.child(userId);\r\n\r\n  currentUserRef.child(\"offers\").on(\"child_added\", async (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data?.offer) {\r\n      const pc =\r\n        store.getState().participants[data.offer.userId].peerConnection;\r\n      await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n      await createAnswer(data.offer.userId, userId);\r\n    }\r\n  });\r\n\r\n  currentUserRef.child(\"offerCandidates\").on(\"child_added\", (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data.userId) {\r\n      const pc = store.getState().participants[data.userId].peerConnection;\r\n      pc.addIceCandidate(new RTCIceCandidate(data));\r\n    }\r\n  });\r\n\r\n  currentUserRef.child(\"answers\").on(\"child_added\", (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data?.answer) {\r\n      const pc =\r\n        store.getState().participants[data.answer.userId].peerConnection;\r\n      const answerDescription = new RTCSessionDescription(data.answer);\r\n      pc.setRemoteDescription(answerDescription);\r\n    }\r\n  });\r\n\r\n  currentUserRef.child(\"answerCandidates\").on(\"child_added\", (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data.userId) {\r\n      const pc = store.getState().participants[data.userId].peerConnection;\r\n      pc.addIceCandidate(new RTCIceCandidate(data));\r\n    }\r\n  });\r\n};\r\n\r\nconst createAnswer = async (otherUserId, userId) => {\r\n  const pc = store.getState().participants[otherUserId].peerConnection;\r\n  const participantRef1 = participantRef.child(otherUserId);\r\n  pc.onicecandidate = (event) => {\r\n    event.candidate &&\r\n      participantRef1\r\n        .child(\"answerCandidates\")\r\n        .push({ ...event.candidate.toJSON(), userId: userId });\r\n  };\r\n\r\n  const answerDescription = await pc.createAnswer();\r\n  await pc.setLocalDescription(answerDescription);\r\n\r\n  const answer = {\r\n    type: answerDescription.type,\r\n    sdp: answerDescription.sdp,\r\n    userId: userId,\r\n  };\r\n\r\n  await participantRef1.child(\"answers\").push().set({ answer });\r\n};\r\n","import {\r\n  SET_MAIN_STREAM,\r\n  ADD_PARTICIPANT,\r\n  SET_USER,\r\n  REMOVE_PARTICIPANT,\r\n  UPDATE_USER,\r\n  UPDATE_PARTICIPANT,\r\n} from \"./actiontypes\";\r\n\r\nimport {\r\n  createOffer,\r\n  initializeListensers,\r\n  updatePreference,\r\n} from \"../server/peerConnection\";\r\n\r\nlet defaultUserState = {\r\n  mainStream: null,\r\n  participants: {},\r\n  currentUser: null,\r\n};\r\n\r\nconst servers = {\r\n  iceServers: [\r\n    {\r\n      urls: [\r\n        \"stun:stun1.l.google.com:19302\",\r\n        \"stun:stun2.l.google.com:19302\",\r\n        \"stun:stun.l.google.com:19302\",\r\n        \"stun:stun3.l.google.com:19302\",\r\n        \"stun:stun4.l.google.com:19302\",\r\n        \"stun:stun.services.mozilla.com\",\r\n      ],\r\n    },\r\n  ],\r\n  iceCandidatePoolSize: 10,\r\n};\r\n\r\nconst generateColor = () =>\r\n  \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n\r\nexport const userReducer = (state = defaultUserState, action) => {\r\n  if (action.type === SET_MAIN_STREAM) {\r\n    let payload = action.payload;\r\n    state = { ...state, ...payload };\r\n    return state;\r\n  } else if (action.type === ADD_PARTICIPANT) {\r\n    let payload = action.payload;\r\n    const currentUserId = Object.keys(state.currentUser)[0];\r\n    const newUserId = Object.keys(payload.newUser)[0];\r\n    if (state.mainStream && currentUserId !== newUserId) {\r\n      payload.newUser = addConnection(\r\n        payload.newUser,\r\n        state.currentUser,\r\n        state.mainStream\r\n      );\r\n    }\r\n\r\n    if (currentUserId === newUserId)\r\n      payload.newUser[newUserId].currentUser = true;\r\n    payload.newUser[newUserId].avatarColor = generateColor();\r\n    let participants = { ...state.participants, ...payload.newUser };\r\n    state = { ...state, participants };\r\n    return state;\r\n  } else if (action.type === SET_USER) {\r\n    let payload = action.payload;\r\n    let participants = { ...state.participants };\r\n    const userId = Object.keys(payload.currentUser)[0];\r\n    payload.currentUser[userId].avatarColor = generateColor();\r\n    initializeListensers(userId);\r\n    state = { ...state, currentUser: { ...payload.currentUser }, participants };\r\n    return state;\r\n  } else if (action.type === REMOVE_PARTICIPANT) {\r\n    let payload = action.payload;\r\n    let participants = { ...state.participants };\r\n    delete participants[payload.id];\r\n    state = { ...state, participants };\r\n    return state;\r\n  } else if (action.type === UPDATE_USER) {\r\n    let payload = action.payload;\r\n    const userId = Object.keys(state.currentUser)[0];\r\n    updatePreference(userId, payload.currentUser);\r\n    state.currentUser[userId] = {\r\n      ...state.currentUser[userId],\r\n      ...payload.currentUser,\r\n    };\r\n    state = {\r\n      ...state,\r\n      currentUser: { ...state.currentUser },\r\n    };\r\n    return state;\r\n  } else if (action.type === UPDATE_PARTICIPANT) {\r\n    let payload = action.payload;\r\n    const newUserId = Object.keys(payload.newUser)[0];\r\n\r\n    payload.newUser[newUserId] = {\r\n      ...state.participants[newUserId],\r\n      ...payload.newUser[newUserId],\r\n    };\r\n    let participants = { ...state.participants, ...payload.newUser };\r\n    state = { ...state, participants };\r\n    return state;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst addConnection = (newUser, currentUser, stream) => {\r\n  const peerConnection = new RTCPeerConnection(servers);\r\n  stream.getTracks().forEach((track) => {\r\n    peerConnection.addTrack(track, stream);\r\n  });\r\n  const newUserId = Object.keys(newUser)[0];\r\n  const currentUserId = Object.keys(currentUser)[0];\r\n\r\n  const offerIds = [newUserId, currentUserId].sort((a, b) =>\r\n    a.localeCompare(b)\r\n  );\r\n\r\n  newUser[newUserId].peerConnection = peerConnection;\r\n  if (offerIds[0] !== currentUserId)\r\n    createOffer(peerConnection, offerIds[0], offerIds[1]);\r\n  return newUser;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport { userReducer } from \"./store/reducer\";\r\n\r\nexport const store = createStore(userReducer);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}